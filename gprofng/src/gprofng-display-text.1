.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.48.3.
.TH GP-DISPLAY-TEXT "1" "July 2021" "GNU gp-display-text version 2.36.50, protocol version: 38" "User Commands"
.SH NAME
gp-display-text \- manual page for gp-display-text version 2.36.50, protocol version: 38
.SH SYNOPSIS
.B gp-display-text
[ \fI\,-script script | -command | - \/\fR] \fI\,exper_1 \/\fR... \fI\,exper_n\/\fR
.SH DESCRIPTION
An alternate spelling for a command is shown in [], where applicable.
.PP
Those commands followed by a * may appear in .rc files.
.PP
Those commands followed by a $ can only appear in .rc files.
.SS "Commands controlling the function list:"
.TP
.B
functions
display functions with current metrics
.TP
.B
metrics metric_spec
set a new list of metrics
.TP
.B
sort metric_spec
sort tables by the specified metric
.TP
.B
fsummary
display summary metrics for each function
.TP
.B
fsingle function_name #
display the summary metrics for specified function
.SS "Commands controlling the callers-callees and calltree lists:"
.TP
.B
callers\-callees[gprof]
display the callers\-callees for each function
.TP
.B
csingle function_name #
display the callers\-callees for the specified function
.TP
.B
cprepend function_name #
add specified function to the head of the callstack fragment
.TP
.B
cappend function_name #
add specified function to the end of the callstack fragment
.TP
.B
crmfirst
remove the first function from the callstack fragment
.TP
.B
crmlast
remove the last function from the callstack fragment
.TP
.B
calltree[ctree]
display the tree of function calls
.SS "Commands controlling the leak and allocation lists:"
.TP
.B
leaks
display memory leaks, aggregated by callstack
.TP
.B
allocs
display allocations, aggregated by callstack
.TP
.B
heap
display memory allocations and leaks, aggregated by callstack
.TP
.B
heapstat
display heap statistics report
.SS "Command controlling the I/O activity report:"
.TP
.B
ioactivity
display I/O activity report, aggregated by file name
.TP
.B
iodetail
display I/O activity report, aggregated by file descriptor
.TP
.B
iocallstack
display I/O activity report, aggregated by callstack
.TP
.B
iostat
display I/O statistics report
.SS "Commands controlling the source and disassembly listings:"
.TP
.B
pcs
display hot PC's with current metrics
.TP
.B
psummary
display summary metrics for each hot PC
.TP
.B
lines
display hot lines with current metrics
.TP
.B
lsummary
display summary metrics for each hot line
.TP
.B
source func/file #
display annotated source for function/file
.TP
.B
disasm func/file #
display annotated disassembly for function/file
.TP
.B
scc com_spec
set compiler commentary classes for source *
.TP
.B
sthresh value
set highlight threshold for source *
.TP
.B
dcc com_spec
set compiler commentary classes for disasm *
.TP
.B
cc com_spec
set compiler commentary classes for both source and disasm *
.TP
.B
dthresh value
set highlight threshold for disasm *
.TP
.B
setpath path_list
set search path for annotated src/dis
.TP
.B
addpath path_list
add search path for annotated src/dis *
.TP
.B
pathmap old_prefix new_prefix
remap path prefix for annotated src/dis *
.SS "Commands controlling the index objects:"
.TP
.B
indxobj type
display index objects of a specified type with current metrics
.TP
.B
indxobj_list
display list of index objects
.TP
.B
indxobj_define type "index\-expr"
define a new index object type *
.SS "Commands controlling the deadlock events lists:"
.TP
.B
deadlocks
display deadlock events
.TP
.B
dsummary {deadlock_id|all}
display summary for the deadlock event
.SS "Commands listing experiments, samples and threads:"
.TP
.B
experiment_list[exp_list]
display the existing experiments
.TP
.B
sample_list
display the list of existing samples
.TP
.B
lwp_list
display the list of existing LWPs
.TP
.B
thread_list
display the list of existing threads
.TP
.B
cpu_list
display the list of CPUs
.SS "Commands controlling filters:"
.TP
.B
filters filter\-specification
define a filter
.TP
.B
describe
describe recorded data and tokens available for filtering data
.SS "Commands controlling old-style filters/selection:"
.TP
.B
sample_select sample_spec
set a new list of samples
.TP
.B
lwp_select lwp_spec
set a new list of LWPs
.TP
.B
thread_select thread_spec
set a new list of threads
.TP
.B
cpu_select cpu_spec
set a new list of CPUs
.SS "Commands controlling load object selection:"
.TP
.B
object_list
display load objects, functions\-shown flag
.TP
.B
object_show obj1,...
set load objects to show all functions *
.TP
.B
object_hide obj1,...
set load objects to hide functions *
.TP
.B
object_api obj1,...
set load objects to show API (entry point) only *
.IP
the special object name `all' refers to all load objects
.TP
.B
objects_default
reset load objects show to defaults
.TP
.B
object_select obj1,...
set list of load objects whose functions are shown
.SS "Commands that list metrics:"
.TP
.B
metric_list
display the available metrics and dmetrics keywords
.TP
.B
cmetric_list[gmetric_list]
display the available callers\-callees metrics
.TP
.B
indx_metric_list
display the available index object metrics
.SS "Commands that control output:"
.TP
.B
outfile filename
open filename for subsequent output
.TP
.B
appendfile filename
open filename for subsequent appended output
.TP
.B
limit n
limit output to the first n entries (n=0 for no limit)
.TP
.B
name {long|short|mangled}[:{soname|nosoname}]
set long/short/mangled names for functions *
.TP
.B
viewmode {user|expert|machine}
set viewmode user|expert|machine *
.TP
.B
compare {on|off|delta|ratio}
enable comparison mode for experiments *
.TP
.B
printmode string
set the mode for printing tables *
.SS "Commands that print other displays:"
.TP
.B
header exp_id
display information about the experiment
.TP
.B
objects
display object list with errors or warnings
.TP
.B
overview
display the overview of all loaded experiments
.TP
.B
sample_detail exp_id
display the current sample list with data
.TP
.B
statistics exp_id
display the execution statistics data
.SS "Commands for experiments (scripts and interactive mode only):"
.TP
.B
open_exp experiment
open experiment or group (drops all loaded experiments first)
.TP
.B
add_exp experiment
add experiment or group
.TP
.B
drop_exp experiment
drop experiment
.SS "Default-setting commands:"
.TP
.B
dmetrics metric_spec
set default function list metrics $
.TP
.B
dsort metric_spec
set default function list sort metric $
.TP
.B
en_desc {on|off|=<regex>}
enable descendant processes on|off|regex matches lineage or program name $
.SS "Miscellaneous commands:"
.TP
.B
<type>
equivalent to "memobj type", or "indxobj type"
.IP
where type is a memory object or index object type
.TP
.B
ifreq
display instruction\-frequency report
.TP
.B
procstats
display processing statistics
.TP
.B
script file
read er_print commands from script file
.TP
.B
version
display the current release version
.TP
.B
quit[exit]
terminate processing and exit
.SS "Help command:"
.TP
.B
help
display the list of available commands
.SH "INDEX OBJECT TYPES"
.TP
.B
Threads
((EXPID_CMP<<32) | THRID)
.TP
.B
CPUs
(CPUID)
.TP
.B
Samples
(SAMPLE_MAP)
.TP
.B
GCEvents
(GCEVENT_MAP)
.TP
.B
Seconds
(TSTAMP/1000000000)
.TP
.B
Processes
(EXPID_CMP)
.TP
.B
Experiment_IDs
((EXPGRID<<60) | (EXPID<<32))
.TP
.B
Datasize
(IOHEAPBYTES==0?0:((IOHEAPBYTES<=(1<<0)?(1<<0):((IOHEAPBYTES<=(1<<2)?(1<<2):((IOHEAPBYTES<=(1<<4)?(1<<4):((IOHEAPBYTES<=(1<<6)?(1<<6):((IOHEAPBYTES<=(1<<8)?(1<<8):((IOHEAPBYTES<=(1<<10)?(1<<10):((IOHEAPBYTES<=(1<<12)?(1<<12):((IOHEAPBYTES<=(1<<14)?(1<<14):((IOHEAPBYTES<=(1<<16)?(1<<16):((IOHEAPBYTES<=(1<<18)?(1<<18):((IOHEAPBYTES<=(1<<20)?(1<<20):((IOHEAPBYTES<=(1<<22)?(1<<22):((IOHEAPBYTES<=(1<<24)?(1<<24):((IOHEAPBYTES<=(1<<26)?(1<<26):((IOHEAPBYTES<=(1<<28)?(1<<28):((IOHEAPBYTES<=(1<<30)?(1<<30):((IOHEAPBYTES<=(1<<32)?(1<<32):((IOHEAPBYTES<=(1<<34)?(1<<34):((IOHEAPBYTES<=(1<<36)?(1<<36):((IOHEAPBYTES<=(1<<38)?(1<<38):((IOHEAPBYTES<=(1<<40)?(1<<40):((IOHEAPBYTES<=(1<<42)?(1<<42):((IOHEAPBYTES<=(1<<44)?(1<<44):((IOHEAPBYTES<=(1<<46)?(1<<46):((IOHEAPBYTES<=(1<<48)?(1<<48):((IOHEAPBYTES<=(1<<50)?(1<<50):(IOHEAPBYTES==\-1?\-1:(1<<50|1)))))))))))))))))))))))))))))))))))))))))))))))))))))))
.TP
.B
Duration
((TSTAMP_HI\-TSTAMP_LO)==0?0:(((TSTAMP_HI\-TSTAMP_LO)<=1000?1000:(((TSTAMP_HI\-TSTAMP_LO)<=10000?10000:(((TSTAMP_HI\-TSTAMP_LO)<=100000?100000:(((TSTAMP_HI\-TSTAMP_LO)<=1000000?1000000:(((TSTAMP_HI\-TSTAMP_LO)<=10000000?10000000:(((TSTAMP_HI\-TSTAMP_LO)<=100000000?100000000:(((TSTAMP_HI\-TSTAMP_LO)<=1000000000?1000000000:(((TSTAMP_HI\-TSTAMP_LO)<=10000000000?10000000000:(((TSTAMP_HI\-TSTAMP_LO)<=100000000000?100000000000:(((TSTAMP_HI\-TSTAMP_LO)<=1000000000000?1000000000000:(((TSTAMP_HI\-TSTAMP_LO)<=10000000000000?10000000000000:(10000000000001))))))))))))))))))))))))
.SH "SEE ALSO"

.B
\fBgprofng-archive\fR(1), \fBgprofng-collect\fR(1), \fBgprofng-display-text\fR(1), \fBgprofng-display-src\fR(1), \fBgprofng-display-html\fR(1), \fBgprofng-display-gui\fR(1)
